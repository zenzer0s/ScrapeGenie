name: Deploy to Google Cloud VM

on:
  push:
    branches:
      - main

env:
  DOCKER_HUB_REPO: "${{ secrets.DOCKER_USERNAME }}/scrapegenie"
  VM_NAME: "${{ secrets.VM_NAME }}"
  VM_ZONE: "${{ secrets.VM_ZONE }}"
  VM_USERNAME: "zen"  # Hardcoded username

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker Image
        run: |
          docker build -t ${{ env.DOCKER_HUB_REPO }}:latest .
          docker push ${{ env.DOCKER_HUB_REPO }}:latest

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1

      - name: Deploy to VM
        run: |
          gcloud compute ssh $VM_NAME --zone=$VM_ZONE --command "
            # Create application directories if they don't exist
            mkdir -p /home/$VM_USERNAME/app/logs
            mkdir -p /home/$VM_USERNAME/app/data
            
            # Pull the latest Docker image
            sudo docker pull $DOCKER_HUB_REPO:latest
            
            # Stop existing container if running
            sudo docker rm -f scrapegenie || true
            
            # Create .env file in user's home directory
            cat > /home/$VM_USERNAME/app/.env << EOF
            TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
            USE_WEBHOOK=false
            PUBLIC_URL=${{ secrets.VM_PUBLIC_URL || 'http://localhost' }}
            BACKEND_URL=${{ secrets.VM_PUBLIC_URL || 'http://localhost' }}
            PORT=8080
            NODE_ENV=production
            PYTHON_PATH=/usr/bin/python3
            EOF
            
            # Start new container
            sudo docker run -d --name scrapegenie --restart unless-stopped \\
              -p 80:8080 \\
              -v /home/$VM_USERNAME/app/logs:/app/logs \\
              -v /home/$VM_USERNAME/app/data:/app/data \\
              --env-file /home/$VM_USERNAME/app/.env \\
              $DOCKER_HUB_REPO:latest
            
            # Clean up unused Docker resources
            sudo docker system prune -f
          "

      - name: Verify Deployment
        run: |
          gcloud compute ssh $VM_NAME --zone=$VM_ZONE --command "
            echo \"Container Status:\"
            sudo docker ps | grep scrapegenie || echo \"ScrapeGenie is not running!\"
            echo \"Container Logs:\"
            sudo docker logs --tail 20 scrapegenie || echo \"No logs available.\"
          "

      - name: Show Output
        run: |
          echo "âœ… Deployed to ${{ secrets.VM_PUBLIC_URL || 'your server' }}"
